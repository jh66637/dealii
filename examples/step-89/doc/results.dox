<h1>Results</h1>

<h3>Vibrating membrane: Point-to-point interpolation vs. Nitsche-type mortaring</h3>

We compare the results of the simulations after the last time step, i.e. at $t=2T$.
The pressure field using Nitsche-type mortaring is depicted on the left.
The pressure field using point-to-point interpolation is depicted on the right.

<b>TODO: all pictures should go to the dealii website to keep the source code small</b>
<table align="center" class="doxtable">
  <tr>
    <td>
        @image html step-89-vm-cut.png "" width=60%
    </td>
    <td>
        @image html step-89-vm-p2p.png "" width=60%
    </td>
  </tr>
</table>

Besides this, the results for the pressure and the velicty in $y$ direction
are plotted along the horizontal line that spans from (0,0.52) to (1,0.52).

<table align="center" class="doxtable">
  <tr>
    <td>
        @image html step-89-p.svg "" width=60%
    </td>
    <td>
        @image html step-89-uy.svg "" width=60%
    </td>
  </tr>
</table>

Clearly, the results differ. While the results for Nitsche-type mortaring
are close to the expected solution, we can see aliasing errors
for the point-to-point interpolation. For different mesh configurations and/or
longer run times, the aliasing effects of the point-to-point simulation
accumulate and the simulation gets instable. To keep the tutorial short we have
chosen one mesh that can be used for all examples. For a configuration that yields
instable results for a wide range of polynomial degrees, see @cite heinz2023high.

<h3>Wave propagation through inhomogenous fluid</h3>

This is just one example in which non-matching discretizations can be efficiently
used to reduce the amount of DoFs. The example is nice, since results for a similar
test case are shown in multiple publications. As before, we slightly adapted the
test case to be able to use the same mesh for all simulations. The pressure field
at $t=0.3$ is depicted below.

@image html step-89-inhomogenous-p.png "" width=30%

As expected, we can easily see that the wave length in the right domain is roughly
three times times the wave length in the left domain. Hence, the wave can be
resolved with a coarser discretization.

Using the same element size in the whole domain, we can compute a reference result.
The displayed reference result is obtained by choosing the same subdivision level
for both subdomains, i.e. @c subdiv_right = 3. In this particular example the
reference result uses $62208$ DoFs, while the non-matching result uses $34560$ DoFs.
The pressure result is plotted along the horizontal line that spans from (0,0.52) to (1,0.52).

@image html step-89-inhomogenous-ref.svg "" width=30%

The results, obtained with the non-matching discretization is in good result with
the reference result.

Note that it would be easily possible to completely, skip the influence of the non-matching
discretization by using the inhomogenous fluxes on all faces and by constructing a
conforming mesh, e.g. by setting the tolerance to $1\times 10^{-6}$ during the call of
@c GridGenerator::merge_triangulations(). However, to keep the effort low to
recreate displayed results we refrain from doing so.

<h3>Notes on overlapping triangulations</h3>

All the implementations are done with overlapping triangulations in mind. In particular the
intersections in the mortaring case are constructed such that they are computed correctly
for overlapping triangulations. For this the intersection requests are of dimension $dim-1$.
The cells which are intersected with the intersection requests are of dimension $dim$. For the
simple case for non-conforming interfaces it would be sufficient to compute the intersections
between $dim-1$ and $dim-1$ entities. Furthermore, the lambda could be adapted, such that cells are
only marked if they are connected to a certain boundary ID (in this case, e.g. 99) instead of
marking every cell that is <i>not</i> connected to the opposite boundary ID (in this case, e.g. 98),
which can generally significantly reduce the setup costs.

Note that for inhomogenous material this procedure is questionable, since it is not clear which
material is present in the overlapping part of the mesh.
